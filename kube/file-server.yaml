---
apiVersion: v1
kind: Service
metadata:
  name: file-server-service
  namespace: misc
spec:
  type: NodePort
  selector:
    app: file-server
  ports:
    - port: 3010
      name: http
      targetPort: 8080
      nodePort: 30100
    - port: 4005
      name: swank
      targetPort: 4005
      nodePort: 30102
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: misc
spec:
  type: NodePort
  selector:
    app: file-server
  ports:
    - port: 5432
      targetPort: 5432
      nodePort: 30101
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pg-pv
  namespace: misc
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /home/macnod/common-lisp/file-server/pg-data
    type: Directory
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pg-pvc
  namespace: misc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  volumeName: pg-pv
  storageClassName: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: file-server-deployment
  namespace: misc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: file-server
  template:
    metadata:
      labels:
        app: file-server
    spec:
      containers:
        - name: file-server
          image: macnod/file-server:0.95.1
          imagePullPolicy: Never
          command: ["ros"]
          args:
            - "run"
            - "--"
            - "--eval"
            - "(require :file-server)"
            - "--eval"
            - "(in-package :file-server)"
            - "--eval"
            - "(run)"
          ports:
            - containerPort: 8080
            - containerPort: 4005
          env:
            # Database connection
            - name: DB_HOST
              value: "postgres-service"
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: "fileserver"
            - name: DB_USER
              value: "fileserver"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: file-server-secrets
                  key: postgres-password
            # Root user with access to all resources
            - name: ROOT_USER
              value: "admin"
            - name: ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: file-server-secrets
                  key: root-user-password
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: file-server-secrets
                  key: jwt-secret
            - name: LOG_SEVERITY
              value: debug
            - name: LOG_SUPPRESS_HEALTH
              value: "true"
            - name: WEB_DIRECTORY
              value: "/app/web"
          volumeMounts:
            - mountPath: /app
              name: file-server-volume
        - name: postgres
          image: postgres:16.10
          imagePullPolicy: Never
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "fileserver"
            - name: POSTGRES_USER
              value: "fileserver"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: file-server-secrets
                  key: postgres-password
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pg-data-volume
            - mountPath: /docker-entrypoint-initdb.d
              name: init-sql-volume
      volumes:
        - name: file-server-volume
          hostPath:
            path: /home/macnod/common-lisp/file-server
            type: Directory
        - name: pg-data-volume
          persistentVolumeClaim:
            claimName: pg-pvc
        - name: init-sql-volume
          hostPath:
            path: /home/macnod/common-lisp/file-server/db-init
            type: Directory
